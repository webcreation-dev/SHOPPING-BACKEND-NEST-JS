{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "LOGIN",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOtpResponseDto"
                }
              }
            }
          },
          "201": {
            "description": ""
          }
        },
        "summary": "REGISTER",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/verify_otp": {
      "post": {
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "201": {
            "description": ""
          }
        },
        "summary": "VERIFY OTP",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/user": {
      "get": {
        "operationId": "AuthController_getUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponseDto"
                }
              }
            }
          }
        },
        "summary": "GET USER",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/forgot_password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendOtpResponseDto"
                }
              }
            }
          },
          "201": {
            "description": ""
          }
        },
        "summary": "FORGOT PASSWORD",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset_password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "RESET PASSWORD",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "LOGOUT",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/toggle_wishlist": {
      "post": {
        "operationId": "AuthController_addWishlist",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleWishlistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "TOGGLE WISHLIST",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/wishlist": {
      "get": {
        "operationId": "AuthController_getWishlist",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Property"
                  }
                }
              }
            }
          }
        },
        "summary": "GET WISHLIST",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/initiate_validation_user": {
      "post": {
        "operationId": "AuthController_initiateValidation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InitiateValidationUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "INITIATE VALIDATION",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/image_profile": {
      "post": {
        "operationId": "AuthController_updateProfile",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "UPDATE PROFILE",
        "tags": [
          "Auth"
        ]
      }
    },
    "/users/validate_user": {
      "post": {
        "operationId": "UsersController_validateUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "VALIDATE USER",
        "tags": [
          "Users"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "GET ALL",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/search_user_by_code": {
      "get": {
        "operationId": "UsersController_searchUserByCode",
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUserByCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "SEARCH USER BY CODE",
        "tags": [
          "Users"
        ]
      }
    },
    "/properties": {
      "post": {
        "operationId": "PropertiesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePropertyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "CREATE ",
        "tags": [
          "Properties"
        ]
      },
      "get": {
        "operationId": "PropertiesController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FilterOperationDto"
            }
          },
          {
            "name": "tarification",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "DAILY",
                "MONTHLY"
              ]
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "PARCEL",
                "HOUSE",
                "VILLA",
                "STUDIO",
                "APARTMENT",
                "APARTMENT_FURNITURE",
                "OFFICE",
                "BUILDING",
                "SHOP",
                "STORE"
              ]
            }
          },
          {
            "name": "to_sell",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2,
              "type": "number"
            }
          },
          {
            "name": "district",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "municipality",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "ASC",
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "rent_price",
              "type": "string",
              "enum": [
                "description",
                "rent_price"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertiesQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfProperty",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Property"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "FIND ALL",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/get_all": {
      "get": {
        "operationId": "PropertiesController_getAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "required": false,
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/FilterOperationDto"
            }
          },
          {
            "name": "tarification",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "DAILY",
                "MONTHLY"
              ]
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "PARCEL",
                "HOUSE",
                "VILLA",
                "STUDIO",
                "APARTMENT",
                "APARTMENT_FURNITURE",
                "OFFICE",
                "BUILDING",
                "SHOP",
                "STORE"
              ]
            }
          },
          {
            "name": "to_sell",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 2,
              "type": "number"
            }
          },
          {
            "name": "district",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "municipality",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "department",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "default": "ASC",
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "default": "rent_price",
              "type": "string",
              "enum": [
                "description",
                "rent_price"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PropertiesQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfProperty",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Property"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET ALL",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}": {
      "get": {
        "operationId": "PropertiesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "GET ONE",
        "tags": [
          "Properties"
        ]
      },
      "patch": {
        "operationId": "PropertiesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePropertyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "UPDATE ",
        "tags": [
          "Properties"
        ]
      },
      "delete": {
        "operationId": "PropertiesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "DELETE PROPERTY",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}/images": {
      "post": {
        "operationId": "PropertiesController_addImages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FilesSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "ADD IMAGES",
        "tags": [
          "Properties"
        ]
      },
      "delete": {
        "operationId": "PropertiesController_deleteImages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilenamesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "DELETE IMAGES",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}/add_articles": {
      "patch": {
        "operationId": "PropertiesController_addArticles",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddArticlesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "ADD ARTICLES",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}/add_owner": {
      "patch": {
        "operationId": "PropertiesController_addOwner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOwnerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "ADD OWNER",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}/update_article": {
      "patch": {
        "operationId": "PropertiesController_updateArticle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "UPDATE ARTICLE",
        "tags": [
          "Properties"
        ]
      }
    },
    "/properties/{id}/remove_article": {
      "delete": {
        "operationId": "PropertiesController_removeArticle",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "REMOVE ARTICLE",
        "tags": [
          "Properties"
        ]
      }
    },
    "/visits": {
      "post": {
        "operationId": "VisitsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVisitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "CREATE ",
        "tags": [
          "Visits"
        ]
      },
      "get": {
        "operationId": "VisitsController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "WAITING",
                "IN_PROGRESS",
                "FINISHED"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitsQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfVisit",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Visit"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET OWN",
        "tags": [
          "Visits"
        ]
      }
    },
    "/visits/managed": {
      "get": {
        "operationId": "VisitsController_findManaged",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "WAITING",
                "IN_PROGRESS",
                "FINISHED"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VisitsQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfVisit",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Visit"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET MANAGED",
        "tags": [
          "Visits"
        ]
      }
    },
    "/visits/{id}": {
      "get": {
        "operationId": "VisitsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "GET ONE",
        "tags": [
          "Visits"
        ]
      },
      "patch": {
        "operationId": "VisitsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVisitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "UPDATE ",
        "tags": [
          "Visits"
        ]
      },
      "delete": {
        "operationId": "VisitsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "DELETE",
        "tags": [
          "Visits"
        ]
      }
    },
    "/visits/{id}/finalize": {
      "patch": {
        "operationId": "VisitsController_finalize",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeVisitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "FINALIZE ",
        "tags": [
          "Visits"
        ]
      }
    },
    "/notifications": {
      "get": {
        "operationId": "NotificationsController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "READ",
                "NOT_READ"
              ]
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "VISIT",
                "CONTRACT",
                "PAYMENT"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationsQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfNotification",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET ALL",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/notifications/{id}": {
      "get": {
        "operationId": "NotificationsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          }
        },
        "summary": "GET ONE",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/notifications/all_read": {
      "get": {
        "operationId": "NotificationsController_allRead",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "ALL READ",
        "tags": [
          "Notifications"
        ]
      }
    },
    "/contracts": {
      "post": {
        "operationId": "ContractsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "CREATE ",
        "tags": [
          "Contracts"
        ]
      },
      "get": {
        "operationId": "ContractsController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfContract",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Contract"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET ALL",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/{id}": {
      "get": {
        "operationId": "ContractsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "GET ONE",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/{id}/suspend": {
      "patch": {
        "operationId": "ContractsController_suspend",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "SUSPEND CONTRACT",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/{id}/activate": {
      "patch": {
        "operationId": "ContractsController_activate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "ACTIVATE",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/due/{id}/add_invoices": {
      "patch": {
        "operationId": "ContractsController_addInvoices",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddInvoicesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "ADD INVOICES",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/due/{id}/update_invoice": {
      "patch": {
        "operationId": "ContractsController_updateInvoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "UPDATE INVOICE",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/contracts/due/{id}/remove_invoice": {
      "delete": {
        "operationId": "ContractsController_removeInvoice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "REMOVE INVOICE",
        "tags": [
          "Contracts"
        ]
      }
    },
    "/billings/generate_dues": {
      "get": {
        "operationId": "BillingsController_createDue",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "CREATE DUE",
        "tags": [
          "Billings"
        ]
      }
    },
    "/billings/pay_dues": {
      "post": {
        "operationId": "BillingsController_payDue",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayDueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "PAY DUE",
        "tags": [
          "Billings"
        ]
      }
    },
    "/billings/request_payment": {
      "post": {
        "operationId": "BillingsController_getApiKey",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayDueDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "PAY DUE",
        "tags": [
          "Billings"
        ]
      }
    },
    "/billings/collections/callback": {
      "post": {
        "operationId": "BillingsController_paymentWebhook",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "WEBHOOK MTN",
        "tags": [
          "Billings"
        ]
      }
    },
    "/billings/collections/webhook-logs": {
      "get": {
        "operationId": "BillingsController_getWebhookLogs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "WEBHOOK MTN",
        "tags": [
          "Billings"
        ]
      }
    },
    "/waitlists": {
      "post": {
        "operationId": "WaitlistsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWaitlistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "CREATE ",
        "tags": [
          "Waitlists"
        ]
      },
      "get": {
        "operationId": "WaitlistsController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 25,
              "default": 1,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitlistsQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaginatedResponseOfWaitlist",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Waitlist"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "GET OWN",
        "tags": [
          "Waitlists"
        ]
      }
    }
  },
  "info": {
    "title": "LOCAPAY BACKEND",
    "description": "Documentation for the LOCAPAY API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "https://locapay-8f958cc17518.herokuapp.com",
      "description": "Production Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "fcm_token": {
            "type": "string"
          }
        },
        "required": [
          "phone",
          "password",
          "fcm_token"
        ]
      },
      "RegistryDates": {
        "type": "object",
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "created_at",
          "updated_at",
          "deletedAt"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "MANAGER",
              "USER"
            ]
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "name",
          "users",
          "id",
          "registryDates"
        ]
      },
      "Gallery": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "property": {
            "$ref": "#/components/schemas/Property"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "url",
          "property",
          "id",
          "registryDates"
        ]
      },
      "Panorama": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "property": {
            "$ref": "#/components/schemas/Property"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "url",
          "property",
          "id",
          "registryDates"
        ]
      },
      "Visit": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "is_taken": {
            "type": "boolean"
          },
          "is_paid": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING",
              "IN_PROGRESS",
              "FINISHED"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "property": {
            "$ref": "#/components/schemas/Property"
          },
          "manager": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "code",
          "date",
          "is_taken",
          "is_paid",
          "status",
          "user",
          "property",
          "manager",
          "id",
          "registryDates"
        ]
      },
      "Annuity": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "due": {
            "$ref": "#/components/schemas/Due"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "amount",
          "due",
          "id",
          "registryDates"
        ]
      },
      "Due": {
        "type": "object",
        "properties": {
          "amount_paid": {
            "type": "number"
          },
          "carry_over_amount": {
            "type": "number"
          },
          "due_date": {
            "format": "date-time",
            "type": "string"
          },
          "status_due": {
            "type": "string",
            "enum": [
              "WAITING",
              "IN_PROGRESS",
              "FINISHED"
            ]
          },
          "invoices": {
            "type": "object"
          },
          "contract": {
            "$ref": "#/components/schemas/Contract"
          },
          "annuities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Annuity"
            }
          },
          "is_refunded": {
            "type": "boolean"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "amount_paid",
          "carry_over_amount",
          "due_date",
          "status_due",
          "invoices",
          "contract",
          "annuities",
          "is_refunded",
          "id",
          "registryDates"
        ]
      },
      "Contract": {
        "type": "object",
        "properties": {
          "start_date": {
            "format": "date-time",
            "type": "string"
          },
          "end_date": {
            "format": "date-time",
            "type": "string"
          },
          "rent_price": {
            "type": "number"
          },
          "caution": {
            "type": "number"
          },
          "articles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "ACTIVE",
              "FINISHED",
              "SUSPENDED"
            ]
          },
          "property": {
            "$ref": "#/components/schemas/Property"
          },
          "landlord": {
            "$ref": "#/components/schemas/User"
          },
          "tenant": {
            "$ref": "#/components/schemas/User"
          },
          "dues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Due"
            }
          },
          "is_gerant_locapay": {
            "type": "boolean"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "start_date",
          "end_date",
          "rent_price",
          "caution",
          "articles",
          "status",
          "property",
          "landlord",
          "tenant",
          "dues",
          "is_gerant_locapay",
          "id",
          "registryDates"
        ]
      },
      "Property": {
        "type": "object",
        "properties": {
          "to_sell": {
            "type": "boolean"
          },
          "video_url": {
            "type": "string"
          },
          "tarification": {
            "enum": [
              "DAILY",
              "MONTHLY"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "PARCEL",
              "HOUSE",
              "VILLA",
              "STUDIO",
              "APARTMENT",
              "APARTMENT_FURNITURE",
              "OFFICE",
              "BUILDING",
              "SHOP",
              "STORE"
            ],
            "type": "string"
          },
          "visit_price": {
            "type": "number"
          },
          "rent_price": {
            "type": "number"
          },
          "commission": {
            "type": "number"
          },
          "management_fee": {
            "type": "number"
          },
          "house_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "district": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "number_households": {
            "type": "number"
          },
          "number_living_rooms": {
            "type": "number"
          },
          "number_rooms": {
            "type": "number"
          },
          "number_bathrooms": {
            "type": "number"
          },
          "paint": {
            "enum": [
              "NO",
              "YES_CLIENT",
              "YES_OWNER"
            ],
            "type": "string"
          },
          "is_fence": {
            "type": "boolean"
          },
          "is_terace": {
            "type": "boolean"
          },
          "water_meter_type": {
            "enum": [
              "SONEB",
              "FORAGE"
            ],
            "type": "string"
          },
          "sanitary": {
            "enum": [
              "NO",
              "YES",
              "MIDDLE"
            ],
            "type": "string"
          },
          "electricity_meter_type": {
            "enum": [
              "PERSONAL",
              "DECOUNTER"
            ],
            "type": "string"
          },
          "electricity_personal_meter_type": {
            "enum": [
              "PREPAID",
              "POST_PREPAID"
            ],
            "type": "string"
          },
          "electricity_decounter_meter_rate": {
            "type": "number"
          },
          "month_advance": {
            "type": "number"
          },
          "caution": {
            "type": "number"
          },
          "water_drilling_rate": {
            "type": "number"
          },
          "is_prepaid": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "articles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "galleries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Gallery"
            }
          },
          "panorama": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Panorama"
            }
          },
          "visits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Visit"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "owner": {
            "$ref": "#/components/schemas/User"
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "to_sell",
          "video_url",
          "tarification",
          "type",
          "visit_price",
          "rent_price",
          "commission",
          "management_fee",
          "house_name",
          "description",
          "latitude",
          "longitude",
          "district",
          "municipality",
          "department",
          "number_households",
          "number_living_rooms",
          "number_rooms",
          "number_bathrooms",
          "paint",
          "is_fence",
          "is_terace",
          "water_meter_type",
          "sanitary",
          "electricity_meter_type",
          "electricity_personal_meter_type",
          "electricity_decounter_meter_rate",
          "month_advance",
          "caution",
          "water_drilling_rate",
          "is_prepaid",
          "is_active",
          "articles",
          "galleries",
          "panorama",
          "visits",
          "user",
          "owner",
          "contracts",
          "id",
          "registryDates"
        ]
      },
      "Notification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "status": {
            "enum": [
              "READ",
              "NOT_READ"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "VISIT",
              "CONTRACT",
              "PAYMENT"
            ],
            "type": "string"
          },
          "module_id": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "title",
          "content",
          "status",
          "type",
          "module_id",
          "user",
          "id",
          "registryDates"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "app_type": {
            "enum": [
              "LOCAPAY",
              "LOCAPAY_BUSINESS"
            ],
            "type": "string"
          },
          "status": {
            "enum": [
              "NOT_VERIFIED",
              "PENDING",
              "ACCEPTED",
              "REJECTED"
            ],
            "type": "string"
          },
          "fcm_token": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "card_image": {
            "type": "string"
          },
          "card_number": {
            "type": "number"
          },
          "signature": {
            "type": "string"
          },
          "person_card": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "sexe": {
            "enum": [
              "M",
              "F"
            ],
            "type": "string"
          },
          "balance_mtn": {
            "type": "string"
          },
          "balance_moov": {
            "type": "string"
          },
          "wishlistedProperties": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          },
          "ownProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          },
          "visits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Visit"
            }
          },
          "managedVisits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Visit"
            }
          },
          "ownerContracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          },
          "contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          },
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "id": {
            "type": "number"
          },
          "registryDates": {
            "$ref": "#/components/schemas/RegistryDates"
          }
        },
        "required": [
          "lastname",
          "firstname",
          "phone",
          "code",
          "password",
          "app_type",
          "status",
          "fcm_token",
          "image",
          "card_image",
          "card_number",
          "signature",
          "person_card",
          "reason",
          "sexe",
          "balance_mtn",
          "balance_moov",
          "wishlistedProperties",
          "roles",
          "properties",
          "ownProperties",
          "visits",
          "managedVisits",
          "ownerContracts",
          "contracts",
          "notifications",
          "id",
          "registryDates"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "access_token": {
            "type": "string"
          }
        },
        "required": [
          "user",
          "access_token"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "sexe": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "password": {
            "type": "string"
          },
          "app_type": {
            "type": "string",
            "enum": [
              "LOCAPAY",
              "LOCAPAY_BUSINESS"
            ]
          },
          "fcm_token": {
            "type": "string"
          }
        },
        "required": [
          "lastname",
          "firstname",
          "phone",
          "sexe",
          "password",
          "app_type"
        ]
      },
      "SendOtpResponseDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "phone"
        ]
      },
      "SaveUserDto": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "number"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "otp",
          "phone"
        ]
      },
      "CurrentUserResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "wishlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          }
        },
        "required": [
          "user",
          "wishlist"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "phone"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "otp": {
            "type": "number"
          },
          "phone": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "otp",
          "phone",
          "password"
        ]
      },
      "ToggleWishlistDto": {
        "type": "object",
        "properties": {
          "property_id": {
            "type": "number"
          }
        },
        "required": [
          "property_id"
        ]
      },
      "InitiateValidationUserDto": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "number"
          }
        },
        "required": [
          "card_number"
        ]
      },
      "ValidateUserDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NOT_VERIFIED",
              "PENDING",
              "ACCEPTED",
              "REJECTED"
            ]
          },
          "user_id": {
            "type": "number"
          }
        },
        "required": [
          "status",
          "user_id"
        ]
      },
      "SearchUserByCodeDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "CreatePropertyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PARCEL",
              "HOUSE",
              "VILLA",
              "STUDIO",
              "APARTMENT",
              "APARTMENT_FURNITURE",
              "OFFICE",
              "BUILDING",
              "SHOP",
              "STORE"
            ]
          },
          "to_sell": {
            "type": "boolean"
          },
          "video_url": {
            "type": "string"
          },
          "owner_code": {
            "type": "string"
          },
          "tarification": {
            "type": "string",
            "enum": [
              "DAILY",
              "MONTHLY"
            ]
          },
          "visit_price": {
            "type": "number"
          },
          "rent_price": {
            "type": "number"
          },
          "commission": {
            "type": "number"
          },
          "management_fee": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "house_name": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "district": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "number_living_rooms": {
            "type": "number"
          },
          "number_rooms": {
            "type": "number"
          },
          "number_bathrooms": {
            "type": "number"
          },
          "number_households": {
            "type": "number"
          },
          "paint": {
            "type": "string",
            "enum": [
              "NO",
              "YES_CLIENT",
              "YES_OWNER"
            ]
          },
          "is_fence": {
            "type": "boolean"
          },
          "is_terace": {
            "type": "boolean"
          },
          "sanitary": {
            "type": "string",
            "enum": [
              "NO",
              "YES",
              "MIDDLE"
            ]
          },
          "water_meter_type": {
            "type": "string",
            "enum": [
              "SONEB",
              "FORAGE"
            ]
          },
          "electricity_meter_type": {
            "type": "string",
            "enum": [
              "PERSONAL",
              "DECOUNTER"
            ]
          },
          "electricity_personal_meter_type": {
            "type": "string",
            "enum": [
              "PREPAID",
              "POST_PREPAID"
            ]
          },
          "electricity_decounter_meter_rate": {
            "type": "number"
          },
          "month_advance": {
            "type": "number"
          },
          "caution": {
            "type": "number"
          },
          "is_prepaid": {
            "type": "boolean"
          },
          "water_drilling_rate": {
            "type": "number"
          }
        },
        "required": [
          "type",
          "to_sell",
          "owner_code",
          "visit_price",
          "rent_price",
          "commission",
          "management_fee",
          "description",
          "house_name",
          "number_bathrooms",
          "number_households",
          "paint",
          "is_fence",
          "is_terace",
          "sanitary",
          "water_meter_type",
          "electricity_meter_type",
          "month_advance",
          "caution",
          "is_prepaid",
          "water_drilling_rate"
        ]
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "number"
          },
          "totalItems": {
            "type": "number"
          },
          "currentPage": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        },
        "required": [
          "itemsPerPage",
          "totalItems",
          "currentPage",
          "totalPages",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "FilterOperationDto": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string",
            "enum": [
              "gt",
              "gte",
              "lt",
              "lte",
              "eq",
              "btw"
            ]
          },
          "operands": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "manyFieldValidation": {
            "type": "object"
          }
        },
        "required": [
          "operator",
          "operands",
          "manyFieldValidation"
        ]
      },
      "PropertiesQueryDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "maximum": 100
          },
          "page": {
            "type": "number",
            "default": 1,
            "maximum": 25
          },
          "name": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/FilterOperationDto"
          },
          "tarification": {
            "enum": [
              "DAILY",
              "MONTHLY"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "PARCEL",
              "HOUSE",
              "VILLA",
              "STUDIO",
              "APARTMENT",
              "APARTMENT_FURNITURE",
              "OFFICE",
              "BUILDING",
              "SHOP",
              "STORE"
            ],
            "type": "string"
          },
          "to_sell": {
            "type": "number",
            "minimum": 1,
            "maximum": 2
          },
          "district": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "order": {
            "type": "string",
            "default": "ASC",
            "enum": [
              "ASC",
              "DESC"
            ]
          },
          "sort": {
            "type": "string",
            "default": "rent_price",
            "enum": [
              "description",
              "rent_price"
            ]
          }
        }
      },
      "UpdatePropertyDto": {
        "type": "object",
        "properties": {
          "to_sell": {
            "type": "boolean"
          },
          "video_url": {
            "type": "string"
          },
          "owner_code": {
            "type": "string"
          },
          "tarification": {
            "type": "string",
            "enum": [
              "DAILY",
              "MONTHLY"
            ]
          },
          "visit_price": {
            "type": "number"
          },
          "rent_price": {
            "type": "number"
          },
          "commission": {
            "type": "number"
          },
          "management_fee": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "house_name": {
            "type": "string"
          },
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          },
          "district": {
            "type": "string"
          },
          "municipality": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "number_living_rooms": {
            "type": "number"
          },
          "number_rooms": {
            "type": "number"
          },
          "number_bathrooms": {
            "type": "number"
          },
          "number_households": {
            "type": "number"
          },
          "paint": {
            "type": "string",
            "enum": [
              "NO",
              "YES_CLIENT",
              "YES_OWNER"
            ]
          },
          "is_fence": {
            "type": "boolean"
          },
          "is_terace": {
            "type": "boolean"
          },
          "sanitary": {
            "type": "string",
            "enum": [
              "NO",
              "YES",
              "MIDDLE"
            ]
          },
          "water_meter_type": {
            "type": "string",
            "enum": [
              "SONEB",
              "FORAGE"
            ]
          },
          "electricity_meter_type": {
            "type": "string",
            "enum": [
              "PERSONAL",
              "DECOUNTER"
            ]
          },
          "electricity_personal_meter_type": {
            "type": "string",
            "enum": [
              "PREPAID",
              "POST_PREPAID"
            ]
          },
          "electricity_decounter_meter_rate": {
            "type": "number"
          },
          "month_advance": {
            "type": "number"
          },
          "caution": {
            "type": "number"
          },
          "is_prepaid": {
            "type": "boolean"
          },
          "water_drilling_rate": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "PARCEL",
              "HOUSE",
              "VILLA",
              "STUDIO",
              "APARTMENT",
              "APARTMENT_FURNITURE",
              "OFFICE",
              "BUILDING",
              "SHOP",
              "STORE"
            ]
          }
        }
      },
      "FilesSchema": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": [
          "files"
        ]
      },
      "FilenamesDto": {
        "type": "object",
        "properties": {
          "filenames": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "filenames"
        ]
      },
      "CreateArticleDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "content"
        ]
      },
      "AddArticlesDto": {
        "type": "object",
        "properties": {
          "articles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateArticleDto"
            }
          }
        },
        "required": [
          "articles"
        ]
      },
      "AddOwnerDto": {
        "type": "object",
        "properties": {
          "owner_code": {
            "type": "string"
          }
        },
        "required": [
          "owner_code"
        ]
      },
      "UpdateArticleDto": {
        "type": "object",
        "properties": {
          "article": {
            "$ref": "#/components/schemas/CreateArticleDto"
          },
          "article_id": {
            "type": "number"
          }
        },
        "required": [
          "article",
          "article_id"
        ]
      },
      "RemoveArticleDto": {
        "type": "object",
        "properties": {
          "article_id": {
            "type": "number"
          }
        },
        "required": [
          "article_id"
        ]
      },
      "CreateVisitDto": {
        "type": "object",
        "properties": {
          "property_id": {
            "type": "number"
          }
        },
        "required": [
          "property_id"
        ]
      },
      "VisitsQueryDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "maximum": 100
          },
          "page": {
            "type": "number",
            "default": 1,
            "maximum": 25
          },
          "status": {
            "enum": [
              "WAITING",
              "IN_PROGRESS",
              "FINISHED"
            ],
            "type": "string"
          }
        }
      },
      "UpdateVisitDto": {
        "type": "object",
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING",
              "IN_PROGRESS",
              "FINISHED"
            ]
          }
        },
        "required": [
          "date",
          "status"
        ]
      },
      "FinalizeVisitDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "is_taken": {
            "type": "boolean"
          }
        },
        "required": [
          "code",
          "is_taken"
        ]
      },
      "NotificationsQueryDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "maximum": 100
          },
          "page": {
            "type": "number",
            "default": 1,
            "maximum": 25
          },
          "status": {
            "enum": [
              "READ",
              "NOT_READ"
            ],
            "type": "string"
          },
          "type": {
            "enum": [
              "VISIT",
              "CONTRACT",
              "PAYMENT"
            ],
            "type": "string"
          }
        }
      },
      "CreateContractDto": {
        "type": "object",
        "properties": {
          "tenant_id": {
            "type": "number"
          },
          "landlord_id": {
            "type": "number"
          },
          "property_id": {
            "type": "number"
          },
          "start_date": {
            "format": "date-time",
            "type": "string"
          },
          "is_gerant_locapay": {
            "type": "boolean"
          }
        },
        "required": [
          "tenant_id",
          "landlord_id",
          "property_id",
          "start_date",
          "is_gerant_locapay"
        ]
      },
      "ActivateContractDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "amount"
        ]
      },
      "CreateInvoiceDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "amount"
        ]
      },
      "AddInvoicesDto": {
        "type": "object",
        "properties": {
          "invoices": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateInvoiceDto"
            }
          }
        },
        "required": [
          "invoices"
        ]
      },
      "UpdateInvoiceDto": {
        "type": "object",
        "properties": {
          "invoice": {
            "$ref": "#/components/schemas/CreateInvoiceDto"
          },
          "invoice_id": {
            "type": "number"
          }
        },
        "required": [
          "invoice",
          "invoice_id"
        ]
      },
      "RemoveInvoiceDto": {
        "type": "object",
        "properties": {
          "invoice_id": {
            "type": "number"
          }
        },
        "required": [
          "invoice_id"
        ]
      },
      "PayDueDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "contract_id": {
            "type": "number"
          }
        },
        "required": [
          "amount",
          "contract_id"
        ]
      },
      "CreateWaitlistDto": {
        "type": "object",
        "properties": {
          "lastname": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "business_sector": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "expectations": {
            "type": "string"
          },
          "used_infos": {
            "type": "boolean"
          }
        },
        "required": [
          "lastname",
          "firstname",
          "phone",
          "email",
          "business_sector",
          "category",
          "expectations",
          "used_infos"
        ]
      },
      "WaitlistsQueryDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "maximum": 100
          },
          "page": {
            "type": "number",
            "default": 1,
            "maximum": 25
          }
        }
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}